Chapter 8 Processing forms

    Permitir que usuários criem Snippets usando form HTML.
    Seguindo o padrão POST-REDIRECT-GET:
        - Usuário recebe o form em branco em GET /snippet/create
        - Usuário preenche o form e submete POST /snippet/create
        - Os dados do form sao validados. Se houver erro de validação o campo será destacado(highlight).
          Com o sucesso na validação o Snippet será adicionado ao banco de dados e o usuário redirecionado para /snippet/view/:id.
    
    Chapter 8.1 Setting up a HTML form

        Criar um arquivo ui/html/pages/create.tmpl.
        O detalhe mais importante deste arquivo são os atributos action e method do form que submetem o form com um POST em /snippet/create.

        Adicionar um link 'Create snippet' no nav(/ui/html/partials/nav.tmpl).

        Atualizar o handler snippetCreateForm para que renderize a nova pagina(create.tmpl).


    8.2 Parsing form data

        Atualizar o handler snippetCreatePost responsável por POST /snippets/create para que ele processe as informações do formulário.
            
            1.  Usar o método r.ParseForm() para analisar o Request Body.
                Este método verifica que o Request Body está 'well-formed' e armazena as informanções em r.PostForm e r.Form.
                Se houver um algum problema no processamento r.ParseForm() retornará um erro.
                O r.ParseForm() é idempotente, pode ser invocado múltiplas vezes na mesma requisição sem gerar efeitos colaterais.
            
            2.  Obter os dados do formulário r.PostForm().Get().
                Por exemplo, obtendo o titulo do snippet r.PostForm().Get('title').
                Se a chave 'tittle' não existisse o método Get() retornária uma string vazia.

        Additional information

            The r.Form map
                
                Também é possível acesas os dados do formulário usando r.Form().
                O r.PostForm só é preenchido por requests do tipo POST, PUT e PATCH.
                O r.Form é populado em todo tipo de requisição, ele armazena os dados do formulário, request body e query string parameters.
                Ao acessar /snippet/create?foo=bar será possível obter o valor de foo usando r.Form().Get('foo')

            The FormValue and PostFormValue methods

                O pacote net/http também fornece os métodos r.FormValue() e r.PostFormValue().
                Eles são atalhos para r.ParseForm() e recuperam o valor dos campos de r.Form ou r.PostForm.
            
            Multiple-value fields

                O r.PostForm.Get() retorna especificamente o primeiro valor de um campo especifico.
                Isso signfica que não é possível usa-lo em formulários que enviam multiplos valores para o mesmo campo(check boxes).
                Neste caso será preciso usar o r.PostForm() diretamente.

    8.3 Validating form data

        - verificar se o 'title' e 'content' não estão vazios
        - garantir que o 'title' não tem mais do que 100 caracteres
        - verificar que 'expires' corresponde aos valores permitidos

        Atualizar o handler snippetCreatePost.


        len() conta a quantidade de bytes, ou seja, "Zoë" possui 4 bytes.
        utf8.RuneCountInString() conta a quantidade de caracteres, ou seja, "Zoë" tem 3 caracteres.
